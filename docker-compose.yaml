services:
  neo4j:
    # FIX: Use the multi-arch base tag. Docker will find the correct arm64 version.
    image: neo4j:5.20.0
    container_name: neo4j_db
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password1234
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    networks:
      - kg_network

  weaviate:
    # FIX: Use the official cr.weaviate.io registry and a recent stable version
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.4
    container_name: weaviate_db
    ports:
      - "8080:8080"
    volumes:
      - weaviate_data:/var/lib/weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - kg_network

  ingestion:
    build:
      context: ./ingestion_pipeline
    container_name: ingestion_service
    depends_on:
      - neo4j
      - weaviate
    volumes:
      - ./data:/app/data
    networks:
      - kg_network
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password1234
      - WEAVIATE_URL=http://weaviate:8080
      # Use the internal container path for data
      - DATA_SOURCE_PATH=/app/data/source/initial_documents.json

  api:
    build:
      context: ./api
    container_name: api_service
    depends_on:
      - neo4j
      - weaviate
    ports:
      - "8000:8000"
    networks:
      - kg_network
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password1234
      - WEAVIATE_URL=http://weaviate:8080
      - EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2

volumes:
  neo4j_data:
  weaviate_data:

networks:
  kg_network:
    driver: bridge